name: CI build and push (PR)

concurrency:
  group: ci-${{ github.run_id }}
  cancel-in-progress: true

on:
  issue_comment:
    types: [created]

jobs:
  code-analysis:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'cryostatio' && contains(github.event.pull_request.labels.*.name, 'safe-to-test') && github.event.issue.pull_request && startsWith(github.event.comment.body, '/build_test')
    steps:
    - name: React to comment
    uses: actions/github-script@v4
    with:
      script: |
          const {owner, repo} = context.issue
          github.reactions.createForIssueComment({
            owner,
            repo,
            comment_id: context.payload.comment.id,
            content: "+1",
          });  
    - uses: tspascoal/get-user-teams-membership@v2
      id: checkMember
      with:
        username: ${{ github.actor }}
        team: 'cryostat/reviewers'
        GITHUB_TOKEN: ${{ secrets.PAT }}
    - name: Fail if not a Cryostat reviewer
      if: ${{ steps.checkMember.outputs.isTeamMember == 'false' }}
      run: exit 1
    - uses: ./.github/workflows/ci-code-analysis.yml
      with:
        checkout-repo: ${{ github.event.pull_request.head.repo.full_name }}
        checkout-ref: ${{ github.event.pull_request.head.ref }}
      secrets: inherit
      
  build-and-test:
    strategy:
      matrix:
        arch: [amd64, arm64]
    uses: ./.github/workflows/ci-build-image.yml
    with:
      build-arch: ${{ matrix.arch }}
      checkout-repo: ${{ github.event.pull_request.head.repo.full_name }}
      checkout-ref: ${{ github.event.pull_request.head.ref }}
      skip-itests: ${{ matrix.arch != 'amd64' }}
    secrets: inherit
    if: github.repository_owner == 'cryostatio' && contains(github.event.pull_request.labels.*.name, 'safe-to-test') && github.event.issue.pull_request && startsWith(github.event.comment.body, '/build_test') && steps.checkMember.outputs.isTeamMember == 'true'

  push-to-ghcr:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    needs: [code-analysis, build-and-test]
    if: always() && github.repository_owner == 'cryostatio' && github.event.issue.pull_request && startsWith(github.event.comment.body, '/build_test')
    steps:
    - name: Fail if needs-triage label applied
      if: ${{ contains(github.event.pull_request.labels.*.name, 'needs-triage') }}
      run: exit 1
    - name: Fail if safe-to-test label NOT applied
      if: ${{ !contains(github.event.pull_request.labels.*.name, 'safe-to-test') }}
      run: exit 1
    - uses: actions/download-artifact@v3
      with:
        name: cryostat-${{ matrix.arch }}
    - name: Load cryostat image
      run: podman load -i cryostat-${{ matrix.arch }}.tar
    - name: Tag cryostat image
      run: podman tag cryostat ghcr.io/${{ github.repository_owner }}/cryostat:pr-${{ github.event.number }}-${{ github.event.pull_request.head.sha }}-linux-${{ matrix.arch }}
    - name: Push PR test image to ghcr.io
      id: push-to-ghcr
      uses: redhat-actions/push-to-registry@v2
      with:
        image: cryostat
        tags: pr-${{ github.event.number }}-${{ github.event.pull_request.head.sha }}-linux-${{ matrix.arch }}
        registry: ghcr.io/${{ github.repository_owner }}
        username: ${{ github.event.pull_request.user.login }}
        password: ${{ secrets.GHCR_PR_TOKEN }}
  
  comment-test-image:
    runs-on: ubuntu-latest
    needs: [code-analysis, build-and-test]
    if: always() && github.repository_owner == 'cryostatio' && github.event.issue.pull_request && startsWith(github.event.comment.body, '/build_test')
    steps:
    - name: Comment test image link
      uses: thollander/actions-comment-pull-request@v1
      with:
        message: |-
          Test image available:
          ```
          $ CRYOSTAT_IMAGE=${{ steps.push-to-ghcr.outputs.registry-path }} sh smoketest.sh
          ```